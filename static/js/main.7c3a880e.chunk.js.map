{"version":3,"sources":["assets/img/carriage.svg","assets/img/brh-vertical.png","components/Projects.tsx","components/Navigation.tsx","components/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Projects","react","Item","Group","divided","Image","size","src","require","Content","Header","content","className","as","href","Meta","Description","Extra","Label","icon","target","React","Navigation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderSidebar","bind","assertThisInitialized","renderMenu","type","Grid","verticalAlign","centered","Column","Card","rel","Icon","name","color","extra","Button","basic","Menu","Home","Responsive","maxWidth","container","columns","stretched","width","stackable","minWidth","components_Navigation","Container","text","Divider","horizontal","components_Projects","App","react_default","a","createElement","HashRouter","Switch","Route","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c3a880e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/carriage.2b3b1fe0.svg\";","module.exports = __webpack_public_path__ + \"static/media/brh-vertical.c12039b0.png\";","import * as React from 'react';\nimport { Item, Label } from 'semantic-ui-react';\nimport '../styles/projects.scss';\n\ninterface IProjectsProps {\n\n}\n\nclass Projects extends React.PureComponent<IProjectsProps> {\n\n  public render() {\n    return (\n      <Item.Group divided>\n        <Item>\n          <Item.Image size='tiny' src={require(\"../assets/img/carriage.svg\")} />\n          <Item.Content>\n            <Item.Header content=\"Carriage\" className=\"project-header\"\n              as=\"a\" href=\"https://carriage.maxmchu.com\" />\n            <Item.Meta content=\"Smarter and safer paratransit for the 21st century.\" />\n            <Item.Description>\n              An automatic ride-scheduling and rider/driver/dispatcher application for\n              Cornell Student Disability Service's pre-arranged shuttle service for\n              disabled and injured students. Built with React/Redux, AWS, Node.JS, and Google ORTools.\n            </Item.Description>\n            <Item.Description>\n              Current initiative project under Cornell DTI engineering project team.\n            </Item.Description>\n            <Item.Extra>\n              <Label content=\"Cornell CIS BOOM 2019 Highlighted Project\" icon=\"computer\"\n                as=\"a\" href=\"https://www.cis.cornell.edu/boom-2019-showcasing-over-40-exciting-student-tech-projects\"\n                target=\"_blank\" />\n              <Label content=\"2019 Big Idea Competition Finalist\" icon=\"trophy\"\n                as=\"a\" href=\"https://www.facebook.com/lifechanginglabs/posts/2403040376393825\" target=\"_blank\" />\n              <Label content=\"View on GitHub\" icon=\"github\"\n                as=\"a\" href=\"https://github.com/maxmchu/carriage-web\" target=\"_blank\" />\n            </Item.Extra>\n          </Item.Content>\n        </Item>\n        <Item>\n          <Item.Image size='tiny' src={require(\"../assets/img/brh-vertical.png\")} />\n          <Item.Content>\n            <Item.Header content=\"Big Red Hacks\" as=\"a\" target=\"_blank\" className=\"project-header\"\n              href=\"https://bigredhacks.com\" />\n            <Item.Meta content=\"Web lead at Cornell's annual student-run hackathon\" />\n            <Item.Description>\n              Lead web team to update Big Red Hacks's public website and admin\n              dashboard handling hackathon applications and logistics.\n            </Item.Description>\n          </Item.Content>\n        </Item>\n        <Item>\n          <Item.Content>\n            <Item.Header content=\"CourseMonitor\" as=\"a\" target=\"_blank\" className=\"project-header\"\n              href=\"https://github.com/maxmchu/coursemonitor\" />\n            <Item.Meta content=\"Don't waste time waiting for classes to open. Get texted.\" />\n            <Item.Description>\n              This Python program tracks the open status of Cornell classes from the\n              university's online Course Roster (e.g. open, closed, or waitlist),\n              and sends an SMS notification via Twilio to the user when a spot in a class has opened up.\n              </Item.Description>\n          </Item.Content>\n        </Item>\n        <Item>\n          <Item.Content>\n            <Item.Header content=\"CORD Contributor\" as=\"a\" target=\"_blank\" className=\"project-header\"\n              href=\"https://opencord.org\" />\n            <Item.Meta content=\"CORD Web UI contributor\" />\n            <Item.Description>\n              As part of co-op internship, created network service graphs, maps, and other UI integrations\n              for XOS with CORD using D3.js, Angular.JS, TypeScript, Python, and Java.\n              Developed VM configurations and Bash scripts for CORD development and\n              deployment with Python, Vagrant, Ansible, and Docker.\n              Worked specifically on E-CORD deployment, XOS and its GUI, VNaaS, and other miscellaneous projects.\n              </Item.Description>\n          </Item.Content>\n        </Item>\n      </Item.Group>\n    );\n  }\n\n}\n\nexport default Projects;\n","import * as React from 'react';\nimport { Button, Card, Grid, Icon, Menu } from 'semantic-ui-react';\nimport '../styles/navigation.scss';\n\ninterface INavgiationProps {\n  type: string;\n}\n\ninterface INavigationState {\n\n}\n\nclass Navigation extends React.Component<INavgiationProps, INavigationState> {\n\n  public constructor(props: INavgiationProps) {\n    super(props);\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderMenu = this.renderMenu.bind(this);\n  }\n\n  public render() {\n    return (this.props.type === 'sidebar') ? this.renderSidebar() : this.renderMenu();\n  }\n\n  private renderSidebar(): React.ReactElement {\n    return (\n      <div className=\"navigation-background\">\n        <Grid verticalAlign='middle' centered className=\"navigation-grid\">\n          <Grid.Column>\n            <Card className=\"navigation-card\">\n              <Card.Content>\n                <Card.Header>Max Chu</Card.Header>\n                <Card.Meta>\n                  Cornell A&amp;S '19, CS + Econ<br />\n                  SDE @ Amazon<br />\n                </Card.Meta>\n                <Card.Description>\n                  <p>\n                    Born and raised in New York City, avid fan of good pizza/bagels, cycling, and OSRS.\n                  </p>\n                </Card.Description>\n              </Card.Content>\n              <Card.Content>\n                <Card.Description>\n                  <a href=\"https://amazon.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <Icon name='amazon' color='orange' />\n                    SDE, August '19 to present<br />\n                  </a>\n                  <a href=\"https://amazon.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <Icon name='amazon' color='orange' />\n                    SDE Intern @ Amazon, Summer '18<br />\n                  </a>\n                  <a href=\"https://opennetworking.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <Icon name='globe' color='blue' />\n                    Software Co-op @ Open Networking, Summer/Fall '17<br />\n                  </a>\n                </Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                <Button.Group>\n                  <Button basic as=\"a\" href=\"https://github.com/maxmchu\" target=\"_blank\">\n                    <Icon name='github' color='black' />\n                  </Button>\n                  <Button basic as=\"a\" href=\"https://www.linkedin.com/in/max-chu-148b2946/\" target=\"_blank\">\n                    <Icon name='linkedin' color='blue' />\n                  </Button>\n                </Button.Group>\n              </Card.Content>\n            </Card>\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n\n  private renderMenu(): React.ReactElement {\n    return (\n      <Menu>\n        <Menu.Item>\n          maxmchu\n        </Menu.Item>\n      </Menu>\n    );\n  }\n\n}\n\nexport default Navigation;","import * as React from 'react';\nimport { Container, Divider, Grid, Responsive, Header } from 'semantic-ui-react';\nimport Projects from './Projects';\nimport Navigation from './Navigation';\n\ninterface IHomeProps {\n\n}\n\nclass Home extends React.PureComponent<IHomeProps> {\n\n  public render() {\n    return (\n      <Grid>\n        <Responsive as={Navigation} type=\"menu\" maxWidth={767} />\n        <Grid container className=\"app-container\" columns='equal' stretched>\n          <Responsive as={Grid.Column} width={4} stackable=\"true\" minWidth={768} className=\"app-navigation\" stretched>\n            <Navigation type=\"sidebar\" />\n          </Responsive>\n          <Grid.Column stackable=\"true\">\n            <Container text>\n              <Divider horizontal>\n                <Header as=\"h1\">About Me</Header>\n              </Divider>\n              <p>\n                I'm Max &mdash; a Software Development Engineer at Amazon . I was a Computer Science and Economics major at Cornell University's College of Arts and Sciences,\n                minored in law. In the past, I have been an intern at Amazon and the Open Networking Foundation.\n              </p>\n              {/* <Work /> */}\n              <Divider horizontal>\n                <Header as=\"h1\">Projects</Header>\n              </Divider>\n\n              <Projects />\n\n            </Container>\n          </Grid.Column>\n        </Grid>\n      </Grid>\n    );\n  }\n\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.scss';\n\nimport Home from './components/Home';\n\n\nclass App extends Component {\n\n  public render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route component={Home} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}