{"version":3,"sources":["components/Home.tsx","components/Navigation.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Home","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react","React","Navigation","_this","renderSidebar","bind","assertThisInitialized","renderMenu","type","className","Grid","verticalAlign","centered","Column","Card","Content","Header","Meta","Description","href","target","Icon","name","color","extra","Button","Group","basic","as","Menu","Item","App","react_default","a","createElement","Responsive","maxWidth","container","columns","width","stackable","minWidth","components_Navigation","BrowserRouter","Switch","Route","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55eaebd7.chunk.js","sourcesContent":["import * as React from 'react';\n\ninterface IHomeProps {\n\n}\n\nclass Home extends React.PureComponent<IHomeProps> {\n\n  public constructor(props: IHomeProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <h1>Hello World!</h1>\n    );\n  }\n\n}\n\nexport default Home;","import * as React from 'react';\nimport { Button, Card, Grid, Icon, Image, Menu } from 'semantic-ui-react';\nimport '../styles/navigation.scss';\n\ninterface INavgiationProps {\n  type: string;\n}\n\ninterface INavigationState {\n\n}\n\nclass Navigation extends React.Component<INavgiationProps, INavigationState> {\n\n  public constructor(props: INavgiationProps) {\n    super(props);\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderMenu = this.renderMenu.bind(this);\n  }\n\n  public render() {\n    return (this.props.type == 'sidebar') ? this.renderSidebar() : this.renderMenu();\n  }\n\n  private renderSidebar(): React.ReactElement {\n    return (\n      <div className=\"navigation-background\">\n        <Grid verticalAlign='middle' centered className=\"navigation-grid\">\n          <Grid.Column>\n            <Card className=\"navigation-card\">\n              <Card.Content>\n                <Card.Header>Max Chu</Card.Header>\n                <Card.Meta>\n                  Cornell Arts &amp; Sciences '19<br />\n                  Computer Science + Economics<br />\n                </Card.Meta>\n                <Card.Description>\n                  <p>\n                    Born and raised in New York City, and currently in-exile\n                    in Ithaca, NY. Avid fan of good pizza/bagels, cycling, and OSRS.\n                  </p>\n                </Card.Description>\n              </Card.Content>\n              <Card.Content>\n                <Card.Description>\n                  <a href=\"http://bigredhacks.com\" target=\"_blank\">\n                    <Icon name='signal' color='red' />\n                    Web Lead @ Big Red Hacks<br />\n                  </a>\n                  <a href=\"http://creativecomputing.club\" target=\"_blank\">\n                    <Icon name='laptop' color='grey' />\n                    Web + Sponsor Lead @ Creative Computing<br />\n                  </a>\n                  <a href=\"http://www.cs.cornell.edu/courses/cs4450/2019sp/\" target=\"_blank\">\n                    <Icon name='graduation cap' color='black' />\n                    CS 4450 Teaching Assistant, Spring '19<br />\n                  </a>\n                  <a href=\"https://amazon.com\" target=\"_blank\">\n                    <Icon name='amazon' color='orange' />\n                    SDE Intern @ Amazon, Summer '18<br />\n                  </a>\n                  <a href=\"https://opennetworking.org\" target=\"_blank\">\n                    <Icon name='globe' color='blue' />\n                    Software Co-op @ Open Networking, Summer/Fall '17<br />\n                  </a>\n                </Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                <Button.Group>\n                  <Button basic as=\"a\" href=\"https://github.com/maxmchu\" target=\"_blank\">\n                    <Icon name='github' color='black' />\n                  </Button>\n                  <Button basic as=\"a\" href=\"https://www.linkedin.com/in/max-chu-148b2946/\" target=\"_blank\">\n                    <Icon name='linkedin' color='blue' />\n                  </Button>\n                </Button.Group>\n              </Card.Content>\n            </Card>\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n\n  private renderMenu(): React.ReactElement {\n    return (\n      <Menu>\n        <Menu.Item>\n          maxmchu\n        </Menu.Item>\n      </Menu>\n    );\n  }\n\n}\n\nexport default Navigation;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.scss';\n\nimport Home from './components/Home';\nimport Navigation from './components/Navigation';\nimport { Grid, Responsive } from 'semantic-ui-react';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Responsive as={Navigation} type=\"menu\" maxWidth={767} />\n        <Grid container className=\"app-container\" columns='equal'>\n          <Responsive as={Grid.Column} width={4} stackable=\"true\" minWidth={768} className=\"app-navigation\">\n            <Navigation type=\"sidebar\" />\n          </Responsive>\n          <Grid.Column stackable=\"true\">\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n              </Switch>\n            </Router>\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}