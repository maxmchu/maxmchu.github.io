{"version":3,"sources":["assets/carriage/mockups.png","assets/img/carriage.svg","assets/img/brh-vertical.png","assets/carriage/carriage-logo.png","assets/carriage/retro-screen.png","assets/carriage/work.jpg","components/Projects.tsx","components/Navigation.tsx","components/Home.tsx","components/Carriage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Projects","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react","Item","Group","divided","Image","size","src","require","Content","Header","content","as","target","className","href","Meta","Description","Extra","Label","icon","React","Navigation","_this","renderSidebar","bind","assertThisInitialized","renderMenu","type","Grid","verticalAlign","centered","Column","Card","Icon","name","color","extra","Button","basic","Menu","Home","Responsive","maxWidth","container","columns","stretched","width","stackable","minWidth","components_Navigation","Container","text","Divider","horizontal","components_Projects","Carriage","inverted","Row","textAlign","List","Statistic","Value","hidden","bulleted","fluid","style","background-color","margin-bottom","App","react_default","a","createElement","BrowserRouter","basename","process","Switch","Route","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09a5dc18.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mockups.83efec7c.png\";","module.exports = __webpack_public_path__ + \"static/media/carriage.2b3b1fe0.svg\";","module.exports = __webpack_public_path__ + \"static/media/brh-vertical.c12039b0.png\";","module.exports = __webpack_public_path__ + \"static/media/carriage-logo.523fbdc3.png\";","module.exports = __webpack_public_path__ + \"static/media/retro-screen.0efaed59.png\";","module.exports = __webpack_public_path__ + \"static/media/work.b0777cbd.jpg\";","import * as React from 'react';\nimport { Item, Label } from 'semantic-ui-react';\nimport '../styles/projects.scss';\n\ninterface IProjectsProps {\n\n}\n\nclass Projects extends React.PureComponent<IProjectsProps> {\n\n  public constructor(props: IProjectsProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <Item.Group divided>\n        <Item>\n          <Item.Image size='tiny' src={require(\"../assets/img/carriage.svg\")} />\n          <Item.Content>\n            <Item.Header content=\"Carriage\" as=\"a\" target=\"_blank\" className=\"project-header\"\n              href=\"https://github.com/maxmchu/adalift-web\" />\n            <Item.Meta content=\"Smarter and safer paratransit for the 21st century.\" />\n            <Item.Description>\n              An automatic ride-scheduling and rider/driver/dispatcher application for\n              Cornell Student Disability Service's pre-arranged shuttle service for\n              disabled and injured students. Built with React/Redux, AWS, Node.JS, and Google ORTools.\n              </Item.Description>\n            <Item.Extra>\n              <Label content=\"Cornell CIS BOOM 2019 Highlighted Project\" icon=\"computer\"\n                as=\"a\" href=\"https://www.cis.cornell.edu/boom-2019-showcasing-over-40-exciting-student-tech-projects\" target=\"_blank\" />\n              <Label content=\"2019 Big Idea Competition Finalist\" icon=\"trophy\"\n                as=\"a\" href=\"https://www.facebook.com/lifechanginglabs/posts/2403040376393825\" target=\"_blank\" />\n\n            </Item.Extra>\n          </Item.Content>\n        </Item>\n        <Item>\n          <Item.Image size='tiny' src={require(\"../assets/img/brh-vertical.png\")} />\n          <Item.Content>\n            <Item.Header content=\"Big Red Hacks\" as=\"a\" target=\"_blank\" className=\"project-header\"\n              href=\"https://bigredhacks.com\" />\n            <Item.Meta content=\"Web lead at Cornell's annual student-run hackathon\" />\n            <Item.Description>\n              Currently leading web team to renovate Big Red Hacks's public website\n              and admin dashboard. Admin dashboard handles hackathon applications and\n              logistics.\n              </Item.Description>\n          </Item.Content>\n        </Item>\n        <Item>\n          <Item.Content>\n            <Item.Header content=\"CourseMonitor\" as=\"a\" target=\"_blank\" className=\"project-header\"\n              href=\"https://github.com/maxmchu/coursemonitor\" />\n            <Item.Meta content=\"Don't waste time waiting for classes to open. Get texted.\" />\n            <Item.Description>\n              This Python program tracks the open status of Cornell classes from the\n              university's online Course Roster (e.g. open, closed, or waitlist),\n              and sends an SMS notification via Twilio to the user when a spot in a class has opened up.\n              </Item.Description>\n          </Item.Content>\n        </Item>\n        <Item>\n          <Item.Content>\n            <Item.Header content=\"CORD Contributor\" as=\"a\" target=\"_blank\" className=\"project-header\"\n              href=\"https://opencord.org\" />\n            <Item.Meta content=\"CORD Web UI contributor\" />\n            <Item.Description>\n              As part of co-op internship, created network service graphs, maps, and other UI integrations\n              for XOS with CORD using D3.js, Angular.JS, TypeScript, Python, and Java.\n              Developed VM configurations and Bash scripts for CORD development and\n              deployment with Python, Vagrant, Ansible, and Docker.\n              Worked specifically on E-CORD deployment, XOS and its GUI, VNaaS, and other miscellaneous projects.\n              </Item.Description>\n          </Item.Content>\n        </Item>\n      </Item.Group>\n    );\n  }\n\n}\n\nexport default Projects;\n","import * as React from 'react';\nimport { Button, Card, Grid, Icon, List, Menu } from 'semantic-ui-react';\nimport '../styles/navigation.scss';\n\ninterface INavgiationProps {\n  type: string;\n}\n\ninterface INavigationState {\n\n}\n\nclass Navigation extends React.Component<INavgiationProps, INavigationState> {\n\n  public constructor(props: INavgiationProps) {\n    super(props);\n    this.renderSidebar = this.renderSidebar.bind(this);\n    this.renderMenu = this.renderMenu.bind(this);\n  }\n\n  public render() {\n    return (this.props.type == 'sidebar') ? this.renderSidebar() : this.renderMenu();\n  }\n\n  private renderSidebar(): React.ReactElement {\n    return (\n      <div className=\"navigation-background\">\n        <Grid verticalAlign='middle' centered className=\"navigation-grid\">\n          <Grid.Column>\n            <Card className=\"navigation-card\">\n              <Card.Content>\n                <Card.Header>Max Chu</Card.Header>\n                <Card.Meta>\n                  Cornell Arts &amp; Sciences '19<br />\n                  Computer Science + Economics<br />\n                </Card.Meta>\n                <Card.Description>\n                  <p>\n                    Born and raised in New York City, and currently in-exile\n                    in Ithaca, NY. Avid fan of good pizza/bagels, cycling, and OSRS.\n                  </p>\n                </Card.Description>\n              </Card.Content>\n              <Card.Content>\n                <Card.Description>\n                  <a href=\"http://bigredhacks.com\" target=\"_blank\">\n                    <Icon name='signal' color='red' />\n                    Web Lead @ Big Red Hacks<br />\n                  </a>\n                  <a href=\"http://creativecomputing.club\" target=\"_blank\">\n                    <Icon name='laptop' color='grey' />\n                    Web + Sponsor Lead @ Creative Computing<br />\n                  </a>\n                  <a href=\"http://www.cs.cornell.edu/courses/cs4450/2019sp/\" target=\"_blank\">\n                    <Icon name='graduation cap' color='black' />\n                    CS 4450 Teaching Assistant, Spring '19<br />\n                  </a>\n                  <a href=\"https://amazon.com\" target=\"_blank\">\n                    <Icon name='amazon' color='orange' />\n                    SDE Intern @ Amazon, Summer '18<br />\n                  </a>\n                  <a href=\"https://opennetworking.org\" target=\"_blank\">\n                    <Icon name='globe' color='blue' />\n                    Software Co-op @ Open Networking, Summer/Fall '17<br />\n                  </a>\n                </Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                <Button.Group>\n                  <Button basic as=\"a\" href=\"https://github.com/maxmchu\" target=\"_blank\">\n                    <Icon name='github' color='black' />\n                  </Button>\n                  <Button basic as=\"a\" href=\"https://www.linkedin.com/in/max-chu-148b2946/\" target=\"_blank\">\n                    <Icon name='linkedin' color='blue' />\n                  </Button>\n                </Button.Group>\n              </Card.Content>\n            </Card>\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n\n  private renderMenu(): React.ReactElement {\n    return (\n      <Menu>\n        <Menu.Item>\n          maxmchu\n        </Menu.Item>\n      </Menu>\n    );\n  }\n\n}\n\nexport default Navigation;","import * as React from 'react';\nimport { Container, Divider, Grid, Responsive, Header } from 'semantic-ui-react';\nimport Projects from './Projects';\nimport Work from './Work';\nimport Navigation from './Navigation';\n\ninterface IHomeProps {\n\n}\n\nclass Home extends React.PureComponent<IHomeProps> {\n\n  public constructor(props: IHomeProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <Grid>\n        <Responsive as={Navigation} type=\"menu\" maxWidth={767} />\n        <Grid container className=\"app-container\" columns='equal' stretched>\n          <Responsive as={Grid.Column} width={4} stackable=\"true\" minWidth={768} className=\"app-navigation\" stretched>\n            <Navigation type=\"sidebar\" />\n          </Responsive>\n          <Grid.Column stackable=\"true\">\n            <Container text>\n              <Divider horizontal>\n                <Header as=\"h1\">About Me</Header>\n              </Divider>\n              <p>\n                I'm Max &mdash; a Computer Science and Economics major at Cornell University's College of Arts and Sciences,\n                minoring in Law and Society and graduating in May 2019. I'm the current web lead at\n              <a href=\"http://bigredhacks.com\" target=\"_blank\"> Big Red Hacks</a>\n                , web and sponsorship lead at the <a href=\"http://creativecomputing.club\" target=\"_blank\">Creative Computing Club</a>,\n              and TA for <a href=\"http://www.cs.cornell.edu/courses/cs4450/2019sp/\" target=\"_blank\">CS4450: Computer Networking</a>.\n                                    In the past, I have also served as a TA for CS4780: Machine Learning and INFO2300: Intermediate Web Development.\n            </p>\n              <Divider horizontal>\n                <Header as=\"h1\">Work Experience</Header>\n              </Divider>\n              <p>\n                I was a software engineering intern at Amazon in Summer 2018,\n                and a software co-op intern at the Open Networking Foundation Summer/Fall 2017.\n              </p>\n\n              {/* <Work /> */}\n              <Divider horizontal>\n                <Header as=\"h1\">Projects</Header>\n              </Divider>\n\n              <Projects />\n\n            </Container>\n          </Grid.Column>\n        </Grid>\n      </Grid>\n    );\n  }\n\n}\n\nexport default Home;","import * as React from 'react';\nimport { Grid, Container, List, Header, Image, Menu, Divider, Statistic } from 'semantic-ui-react';\nimport '../App.scss';\nimport '../styles/carriage.scss';\n\ninterface ICarriageProps {\n\n}\n\nclass Carriage extends React.PureComponent<ICarriageProps> {\n\n  public constructor(props: ICarriageProps) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <div>\n        <Menu inverted className=\"fixed-menu\">\n          <Menu.Item>\n            <Image src={require(\"../assets/carriage/carriage-logo.png\")} size=\"small\" />\n          </Menu.Item>\n        </Menu>\n        <Grid stackable verticalAlign=\"middle\" >\n          <Grid.Row className=\"mockup-bg\">\n            <Grid.Column width={10} className=\"image-container\" >\n              <Image src={require(\"../assets/carriage/mockups.png\")} size=\"massive\"\n                verticalAlign=\"middle\" />\n            </Grid.Column>\n            <Grid.Column width={6} className=\"image-container\">\n              <Header as=\"h1\" className=\"carriage-header\" textAlign=\"right\">\n                Smarter and safer paratransit built for the 21st century.\n              </Header>\n              <List className=\"text-align-right white-text\">\n                <List.Item>Rider and driver companion apps</List.Item>\n                <List.Item>Automatic ride scheduling</List.Item>\n                <List.Item>Dispatcher dashboard and service analytics</List.Item>\n              </List>\n              <List className=\"text-align-right white-text\">\n                <List.Item>Featured project in BOOM 2019</List.Item>\n                <List.Item>2019 Big Idea Competition Nonprofit Finalist</List.Item>\n              </List>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row className=\"row-top-padding\">\n            <Grid.Column width={16}>\n              <Container text className=\"text-align-center\">\n                <Header as=\"h1\" className=\"carriage-title\">\n                  What is paratransit? Why does it matter?\n                </Header>\n                <p className=\"carriage-content\">\n                  Paratransit consists of transportation services for people\n                  with permament or temporary mobility issues,\n                  <span className=\"blue-highlight\"> providing essential access to transportation.</span>\n                </p>\n                <p className=\"carriage-content\">\n                  Under the Americans with Disabilities Act, public transit agencies and universities\n                  <span className=\"blue-highlight\"> are required to provide paratransit service.</span>\n                </p>\n              </Container>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row columns=\"equal\" verticalAlign=\"top\" className=\"row-padding\">\n            <Grid.Column>\n              <Statistic size=\"tiny\" className=\"carriage-stat\">\n                <Statistic.Value className=\"carriage-stat-value\">36.3 million</Statistic.Value>\n                <Statistic.Label className=\"carriage-stat-label\">Americans with one or more disabilities</Statistic.Label>\n              </Statistic>\n            </Grid.Column>\n            <Grid.Column>\n              <Statistic size=\"tiny\" className=\"carriage-stat\">\n                <Statistic.Value className=\"carriage-stat-value\">11 million</Statistic.Value>\n                <Statistic.Label className=\"carriage-stat-label\">disabled Americans who have dificulty accessing transportation</Statistic.Label>\n              </Statistic>\n            </Grid.Column>\n            <Grid.Column>\n              <Statistic size=\"tiny\" className=\"carriage-stat\">\n                <Statistic.Value className=\"carriage-stat-value\">550,000+</Statistic.Value>\n                <Statistic.Label className=\"carriage-stat-label\">\n                  disabled Americans who do not leave their homes at all\n                  </Statistic.Label>\n              </Statistic>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={16}>\n              <Container text className=\"text-align-center\">\n                <p className=\"carriage-content\">\n                  Accessible ridesharing options aren't always\n                <span className=\"blue-highlight\"> available or affordable</span>.\n              </p>\n                <Divider hidden />\n              </Container>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row className=\"retro-bg\" verticalAlign=\"top\">\n            <Grid.Column width={8} className=\"column-lr-padding\">\n              <Header as=\"h1\" className=\"gold-text\">\n                Current paratransit tech is stuck in the 1990s.\n              </Header>\n              <List className=\"gold-text carriage-content\" bulleted>\n                <List.Item>Requests are made by phone several days in advance</List.Item>\n                <List.Item>Dispatchers manually schedule rides every morning</List.Item>\n                <List.Item>Schedules are distributed to drivers in paper</List.Item>\n              </List>\n              <Header className=\"gold-text\" as=\"h3\">\n                Delays snowball in the system, and vulnerable riders are left\n                stranded outside waiting for their drivers.\n              </Header>\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <Image src={require(\"../assets/carriage/retro-screen.png\")} fluid />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row columns=\"equal\" className=\"row-no-padding\">\n            <Grid.Column className=\"mockup-bg expand-column\" verticalAlign=\"middle\">\n              <Image src={require('../assets/carriage/mockups.png')} size=\"massive\" />\n            </Grid.Column>\n            <Grid.Column className=\"white-bg row-padding text-align-center\">\n\n              <Header as=\"h1\" className=\"blue-highlight larger-title\">\n                Introducing Carriage\n                </Header>\n              <p className=\"blue-highlight carriage-content\">\n                A 21st century solution to paratransit.\n                </p>\n              <Header as=\"h2\">\n                Driver and rider companion apps\n                </Header>\n              <p className=\"carriage-content\">\n                GPS tracking and shared contact informations provides\n                safety and accountability.\n                </p>\n              <Header as=\"h2\">\n                Automatic scheduling and service analytics\n                </Header>\n              <p className=\"carriage-content\">\n                Reduced stress, more efficient routing, and the ability to adapt\n                to changes on demand. Service analytics drive smarter service decisions.\n                </p>\n\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row columns=\"equal\" className=\"row-no-padding\">\n\n            <Grid.Column className=\"white-bg row-padding text-align-center\">\n\n              <Header as=\"h1\" className=\"larger-title\">\n                Interested in working on Carriage?\n              </Header>\n              <p className=\"carriage-content\">\n                Carriage is still under development,\n                and we need all the help we can get! Reach out to us!\n              </p>\n\n            </Grid.Column>\n            <Grid.Column className=\"expand-column remove-padding\" verticalAlign=\"middle\">\n              <Image src={require(\"../assets/carriage/work.jpg\")} size=\"massive\" verticalAlign=\"middle\" />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row style={{ \"background-color\": \"#ecf0f1\" }}>\n            <Grid.Column width={16}>\n              <Container text textAlign=\"center\">\n                <Header as=\"h3\" content=\"Carriage\" style={{ \"margin-bottom\": 0 }} />\n                <p>\n                  Built by Max Chu and Jessica Hong, 2019\n                </p>\n              </Container>\n\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n\n}\n\nexport default Carriage;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.scss';\n\nimport Home from './components/Home';\nimport Carriage from './components/Carriage'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/carriage\" component={Carriage} />\n            <Route component={Home} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}